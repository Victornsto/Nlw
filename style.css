/*================== RESET +++++++++++++++++++*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

ul {
  list-style: none;
}

a {
  text-decoration: none;
}

img {
  width: 100%;
  height: auto;
}

/*================== VARIABLES +++++++++++++++++++*/
:root {
  --header-height: 4.5rem;
  /* HSL color mode */

  --hue: 270;
  /* Variaveis funcionam para receber valores de configurações
     Nesse caso, ela está recebendo valores de cores específicas */
  --base-color: hsl(var(--hue) 36% 57%);
  --base-color-second: hsl(var(--hue) 65% 88%);
  --base-color-alt: hsl(var(--hue) 57% 53%);
  --title-color: hsl(var(--hue) 41% 10%);
  --text-color: hsl(0 0% 46%);
  --text-color-light: hsl(0 0% 98%);
  --body-color: hsl(0 0% 98%);
}

/*================== BASE +++++++++++++++++++*/
body {
  font: 400 1rem 'DM Sans', sans-serif;
  color: var(
    --text-color
  ); /* Aplicação de uma variável com cores pré-definidas */
  background: var(--body-color);
  -webkit-font-smoothing: antialiased; /* Propriedade que deixa a font um pouco mais leve. Só é aplicavel em navegadores compativeis */
}

.titlle {
  font: 700 1.875rem 'Poppins', sans-serif;
  color: var(--title-color);
  -webkit-font-smoothing: auto;
}

.button {
  background-color: var(--base-color);
  color: var(--text-color-light);
  height: 3.5rem;
  display: inline-flex;
  align-items: center;
  padding: 2rem;
  border-radius: 00.25rem;
  font: 500 1rem 'DM Sans', sans-serif;
  transition: background 0.3s;
}

.button:hover {
  background: var(--base-color-alt);
}

.divider-1 {
  height: 1px;
  background: linear-gradient(
    270deg,
    hsla(var(--hue), 36%, 57%, 1) 0%,
    hsla(var(--hue), 65%, 88%, 0.34) 100%
  );
}

/*================== LAYOUT +++++++++++++++++++*/
.container {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
  /*margin: 0 auto;  aqui o 0 se refere aos top end bottom, e o auto para left end right. Ou seja, nenhuma margem na lateral, automático nos lados*/
}

.grid {
  display: grid; /* habilita funcionalidades para o elemento selecionado */
  gap: 2rem;
}

.section {
  padding: 5rem 0; /* vai criar um espaço de 80px em todas as sessões */
}

main {
  margin-top: calc(
    var(--header-height) + 2rem
  ); /* Todos os conteudos abaixo tem que respeitar o main*/
}

/*================== HEADER +++++++++++++++++++*/

#header {
  border-bottom: 1px solid #e4e4e4;
  margin-bottom: 2rem;
  display: flex; /* alinha o elemento para ficarem na mesma linha */
  top: 0;
  right: 0;
  width: 100%;
  position: fixed; /* Essa config faz com que o header fique fixo no topo da pagina */
  z-index: 100;
  background-color: var(--body-color);
  justify-content: flex-end;
}

/*================== NAV +++++++++++++++++++*/
nav {
  height: var(
    --header-height
  ); /* responsivo: se adapta aos tipos de dispositiso (mobile, desktop e tablet*/
  align-items: center;
  display: flex; /* deixa os elementos filhos um do lado do outro */
  justify-content: space-between;
  width: 100%; /* Importante o elemento filho (nav) receber o mesmo valor de largura do elemento pai (header) */
}

nav ul li {
  text-align: center;
}

nav ul li a {
  transition: color 0.3s;
  position: relative;
}

/* pseudo element = Cria um efeito que, ao passar o mouse por cima dos li, cria uma linha com 24px abaixo(after) do li */
nav ul li a:after {
  /* pseudo element = Cria um efeito que, ao passar o mouse por cima dos li, cria uma linha com 24px abaixo(after) do li */
  content: '';
  width: 0%;
  height: 2px;
  background: var(--base-color);
  position: absolute;
  bottom: -1.5rem;
  left: 0;
  transition: width 0.2s;
}

nav ul li a:hover::after {
  width: 100%;
}

nav ul li a:hover {
  color: var(--base-color);
}

nav .menu {
  /* Essa config esconde o menu, pra ele aparecer só quando nav.show .menu for chamado*/
  opacity: 0;
  visibility: hidden;
}
/* MOstrar Menu */
nav.show .menu {
  /* A class show, do nav, não listada no html propositalmente, pois quem irá listar essa class é o javascrip */
  opacity: 1;
  visibility: visible;
  background: var(--body-color);
  /*view port é usado para cobrir a pagina, uma camada acima da pagina que estamos fazendo. Essas configutações fazem com que, ao abrir o menu, ele tome de conta da tela do dispositivo, sem sair da camada principal*/
  height: 100vh; /* Altura do dispositivo */
  width: 100vw; /* Largura do dispositivo */
  position: fixed;
  top: 0;
  left: 0;
  display: grid;
  place-content: center; /* Deixa o conteudo no meio da tela */
}

nav.show ul.grid {
  gap: 4rem;
}

nav .icon-menu {
  margin-left: -8rem;
}

.toggle {
  color: var(--base-color);
  font-size: 1.5rem;
  cursor: pointer;
}

nav .icon-close {
  visibility: hidden;
  opacity: 0;
  position: absolute;
  right: 1.5rem;
  /* TRANSIÇÃO BACANA */
}

nav.show div.icon-close {
  visibility: visible;
  opacity: 1;
}

/*================== LOGO +++++++++++++++++++*/

.logo {
  font: 700 1.3125rem 'Poppins', sans-serif;
  color: var(--title-color);
  align-items: center;
}
.logo span {
  color: var(--base-color);
}

/*================== HOME +++++++++++++++++++*/
#home {
  overflow: hidden; /* alinha o conteudo do elemento para dentro da tela */
}

#home .container {
  margin: 0;
}

#home .imagem {
  position: relative;
}

#home .imagem img {
  position: relative;
  right: 2.96rem;
}

#home .imagem::before {
  /* SUDO ELEMENT = Cria um elemento fantasma */
  content: '';
  height: 100%;
  width: 100%;
  background: var(--base-color-second);
  position: absolute;
  top: -16.8%;
  left: 16.7%;
  z-index: 0; /* Todos os elementos estão, por padrão, com valor 0 no eixo Z. Quando damos um valor a mais que o padrão, ele se sobrepõe */
}

#home .imagem img,
#home .imagem::before {
  border-radius: 0.25rem; /* Adiciona uma borda na borda (kkkk) */
}

#home .text {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
  text-align: center;
}

#home .text h1 {
  margin-bottom: 1rem;
}

#home .text p {
  margin-bottom: 2rem;
}

/*================== ABOUT +++++++++++++++++++*/
#about .container {
  margin: 0;
}

#about .text {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
  text-align: justify;
}

#about .grid .text {
  display: grid; /* habilita funcionalidades para o elemento selecionado */
  gap: 2rem;
}

#about .grid {
  display: grid; /* habilita funcionalidades para o elemento selecionado */
  gap: 2rem;
}

#about .imagem {
  position: relative;
  margin: 0;
  width: 100%;
}

#about .imagem img {
  width: 100%;
  position: relative;
}

#about .imagem::before {
  /* SUDO ELEMENT = Cria um elemento fantasma */
  content: '';
  height: 100%;
  width: 100%;
  background: var(--base-color-second);
  position: absolute;
  top: -8.38%;
  left: -33.108%;
  z-index: -1; /* Todos os elementos estão, por padrão, com valor 0 no eixo Z. Quando damos um valor a mais que o padrão, ele se sobrepõe */
}

#about .imagem img,
#about .imagem::before {
  border-radius: 0.25rem; /* Adiciona uma borda na borda (kkkk) */
}

#about {
  overflow: hidden; /* alinha o conteudo do elemento para dentro da tela */
}
